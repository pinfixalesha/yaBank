plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.yandex.practicum'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	testImplementation {
		exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
		exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
		exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
		exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-config'
	}
}

// Отключение LogBack
configurations.configureEach { configuration ->
	configuration.exclude(module: "spring-boot-starter-logging")
	configuration.exclude(group: "ch.qos.logback")
}

dependencies {
	//Logstash
	implementation 'org.slf4j:slf4j-api:2.0.16'
	implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.24.3'
	implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
	implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.2.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:4.2.1'
	implementation 'org.springframework.retry:spring-retry:2.0.11'

	//zipkin
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	//grafana
	implementation 'io.micrometer:micrometer-registry-prometheus:1.15.0'

	// OAuth2 Client для интеграции с Keycloak
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Тестирование
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	testImplementation 'com.h2database:h2'

}



tasks.named('test') {
	useJUnitPlatform()
}
