# Global values (if any)
global:
  domain: yabank.local # Example domain for ingress

# Configuration for the customer-service subchart
# NOTE: For local development (Minikube/Kind/Docker Desktop), build the image locally
# (e.g., `docker build -t customer-service:0.0.1-SNAPSHOT .` in customer-service dir)
# and ensure your K8s cluster can access local images (e.g., `minikube docker-env` or `kind load docker-image ...`).
exchange-generator-application:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: exchange-generator-application # Removed registry prefix
    tag: "0.0.1-SNAPSHOT"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    className: "nginx" # Specify your ingress controller class
    hosts:
      - host: exchange-generator-application.yabank.local # Use global domain or specific
        paths:
          - path: /
            pathType: ImplementationSpecific

notifications-application:
  replicaCount: 1
  image:
    repository: notifications-application
    tag: "0.0.1-SNAPSHOT"
    pullPolicy: IfNotPresent
    # -----------------------------
  service:
    type: ClusterIP
    port: 8081 # Different port for order service
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: notifications-application.yabank.local
        paths:
          - path: /
            pathType: ImplementationSpecific
  config:
    database_url: "jdbc:postgresql://yabank-db.{{ .Release.Namespace }}.svc.cluster.local:5432/yabank"
    database_username: "yabank"


db:
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: "12345" # Можно оставить пустым для генерации
    database: yabank
    username: yabank
    password: "123456" # Example: Not recommended for production
  primary:
    persistence:
      enabled: true
      size: 1Gi # Small size for example
    pgHbaConfiguration: |
      # Local connections without password (trust)
      local   all             all                                     trust
      # Allow replication connections with md5 authentication
      host    replication     all                   127.0.0.1/32    md5
      host    replication     all                   ::1/128         md5
      # All other connections use md5
      host    all             all                   0.0.0.0/0       md5
      host    all             all                   ::/0            md5